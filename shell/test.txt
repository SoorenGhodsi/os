g++ -Wall -Werror -pedantic -Og -g -std=c++17 -fsanitize=address -fsanitize=undefined -D_GLIBCXX_DEBUG   -c -o main.o main.cc
g++ -Wall -Werror -pedantic -Og -g -std=c++17 -fsanitize=address -fsanitize=undefined -D_GLIBCXX_DEBUG -o msh main.o
python3 shell_test.py
Sanitizer output (main process) for test fork fails:
  ==4051016==LeakSanitizer has encountered a fatal error.
  ==4051016==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1
  ==4051016==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)
Sanitizer output (main process) for test fork fails in a pipeline:
  ==4051597==LeakSanitizer has encountered a fatal error.
  ==4051597==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1
  ==4051597==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)


Failed test 'large amount of data through pipe'
Test input:
  /bin/head -c 1048576 /dev/zero | /bin/cat | /usr/bin/wc -c
  exit
Actual stdout:
  
Actual stderr:
  <error output not available>
Expected stdout regular expression pattern: (extra lines allowed)
  .*1048576.*
Expected stderr regular expression pattern:
  <empty>
Errors:
  timed out after 30 seconds
  in stdout: could not find match for pattern [.*1048576.*] in []
  in stderr: unexpected extra output [['<error output not available>']]



87 tests passed and 1 tests failed.
---
Note on interpreting test output patterns:
All expected values matched against a "regular expression" where:
    .* means any string (including empty strings)
    .+ means any string (excluding empty strings)
    everything is matched case-insensitively

